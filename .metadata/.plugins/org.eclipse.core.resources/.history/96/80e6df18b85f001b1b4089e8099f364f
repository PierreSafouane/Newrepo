package fr.formation.afpa.io.file;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

public class Test {

	public ArrayList scanDir ( String theDirectory ) throws IOException
	{
	File currDir = new File ( theDirectory );
	ArrayList finalListFiles = new ArrayList();
	// Return null if not a directory
	if ( currDir.exists() && ! currDir.isDirectory() )
	{
	return null;
	}

	String[] fileList = currDir.list();

	for (int i=0; i<fileList.length; i++ )
	{
	Object temp = scanDir ( theDirectory + File.separator + fileList[i] );
	if ( temp == null )
	// --- Add the path of the current file
	finalListFiles.add(theDirectory + File.separator + fileList[i]);
	else
	// --- Add the array list of the current directory
	}

	// --- Finally, return the arrayList
	return finalListFiles;
	}

	/*
	 * Et ceci de facon recurente, c'est a dire que ca te donnera toute
	 * l'arborescence d'un repertoire si tu as des sous-dossiers. Pour y faire appel
	 * : ArrayList arborescence = scanDir ( "Chemin complet du repertoire");
	 */
	

//	C:\Program Files\Google

	public static void main(String[] args) {

		FileExample f = new FileExample();

		Scanner sc = new Scanner(System.in);
		System.out.println("Veuillez entrez le pathName du repertoire:");
		String pathName = sc.nextLine();
		// créer un fichier représente un chemin
		File file = new File(pathName);

		// verifiez s'il existe
		System.out.println("Path exist ? " + file.exists());

		if (file.exists()) {
			f.suivant(pathName);
		} else {
			System.out.println("pathname inexistant");
		}

	}

}
